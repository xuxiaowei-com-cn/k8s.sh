apiVersion: v1
kind: ConfigMap
metadata:
  name: daemon-json
  namespace: gitlab
data:
  # 信任域名证书的配置
  # 或者使用 /etc/docker/certs.d/ 文件夹进行配置
  daemon.json: |
    {
      "insecure-registries": [
        "jihulab.docker.xuxiaowei.cn",
        "io.docker.xuxiaowei.cn",
        "gitlab-jh.docker.xuxiaowei.cn",
        "hosted.docker.xuxiaowei.cn",
        "163.docker.xuxiaowei.cn",
        "group.docker.xuxiaowei.cn",
        "aliyuncs.docker.xuxiaowei.cn",
        "elastic.docker.xuxiaowei.cn",
        "oracle.docker.xuxiaowei.cn",
        "pig.docker.xuxiaowei.cn",
        "jihulab-proxy.docker.xuxiaowei.cn"
      ]
    }

---

#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: gitlab-docker-data-pv
#spec:
#  accessModes:
#    - ReadWriteOnce
#    - ReadWriteMany
#  capacity:
#    storage: 50Gi
#  claimRef:
#    apiVersion: v1
#    kind: PersistentVolumeClaim
#    name: gitlab-docker-data-pvc
#    namespace: gitlab
#  mountOptions:
#    - hard
#    - nfsvers=4.1
#  nfs:
#    # 需要事先创建此文件夹
#    path: /nfs/gitlab/docker/var/lib/docker
#    server: 172.25.25.5
#  persistentVolumeReclaimPolicy: Retain
#  volumeMode: Filesystem

---

#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: gitlab-docker-data-pvc
#  namespace: gitlab
#spec:
#  accessModes:
#    - ReadWriteOnce
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 50Gi
#  volumeMode: Filesystem
#  volumeName: gitlab-docker-data-pv

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-deployment
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker
  template:
    metadata:
      labels:
        app: docker
    spec:
      containers:
        - env:
            # 关闭 TLS（仅使用 http）
            - name: DOCKER_TLS_CERTDIR
              value: ""
          image: docker:24.0.5-dind
          name: docker
          ports:
            - containerPort: 2375
            - containerPort: 2376
          securityContext:
            # 以特权身份运行
            privileged: true
          volumeMounts:
            - mountPath: /etc/localtime
              name: localtime
              readOnly: true
            # 信任域名证书的配置
            # 例如信任 pig.docker.xuxiaowei.cn 域名证书时，
            # 配置的路径为 /etc/docker/certs.d/pig.docker.xuxiaowei.cn/ca.crt，
            # 其中 ca.crt 文件为信任的域名证书，访问域名即可得到。
            # 说明：有端口时，记得文件夹要保留端口
            # 或者使用 daemon.json 配置信任域名
            - mountPath: /etc/docker/certs.d/
              name: docker-certs
            - mountPath: /etc/docker/
              name: daemon-json
            # docker 数据储存位置
            # 注意：不能使用 NFS，否则拉取镜像等操作非常慢
            #- name: docker-data
            #  mountPath: /var/lib/docker
      hostAliases:
        - hostnames:
            - jihulab.docker.xuxiaowei.cn
            - io.docker.xuxiaowei.cn
            - gitlab-jh.docker.xuxiaowei.cn
            - hosted.docker.xuxiaowei.cn
            - 163.docker.xuxiaowei.cn
            - group.docker.xuxiaowei.cn
            - aliyuncs.docker.xuxiaowei.cn
            - elastic.docker.xuxiaowei.cn
            - oracle.docker.xuxiaowei.cn
            - pig.docker.xuxiaowei.cn
            - jihulab-proxy.docker.xuxiaowei.cn
          ip: 172.25.25.220
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /etc/localtime
          name: localtime
        - name: docker-certs
          nfs:
            path: /nfs/gitlab/docker/etc/docker/certs.d/
            server: 172.25.25.5
        - configMap:
            items:
              - key: daemon.json
                path: daemon.json
            name: daemon-json
          name: daemon-json
        #- name: docker-data
        #  persistentVolumeClaim:
        #    claimName: gitlab-docker-data-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: docker-service
  namespace: gitlab
spec:
  ports:
    - name: "2375"
      nodePort: 30375
      port: 2375
      targetPort: 2375
    - name: "2376"
      nodePort: 30376
      port: 2376
      targetPort: 2376
  selector:
    app: docker
  type: NodePort
